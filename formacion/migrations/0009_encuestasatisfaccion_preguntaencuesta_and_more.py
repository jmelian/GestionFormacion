# Generated by Django 5.2.3 on 2025-07-10 11:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('formacion', '0008_participacion_fecha_inicio_real_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EncuestaSatisfaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text="Título de la encuesta (ej. 'Encuesta de Satisfacción del Curso de ITIL v4')", max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción o instrucciones para la encuesta.')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activa', models.BooleanField(default=True, help_text='Indica si la encuesta está activa y disponible para ser asignada.')),
            ],
            options={
                'verbose_name': 'Encuesta de Satisfacción',
                'verbose_name_plural': 'Encuestas de Satisfacción',
            },
        ),
        migrations.CreateModel(
            name='PreguntaEncuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_pregunta', models.TextField()),
                ('tipo_pregunta', models.CharField(choices=[('texto', 'Respuesta Abierta (Texto)'), ('opcion_multiple', 'Opción Múltiple (Selección Única)'), ('escala', 'Escala de Calificación (1-5, 1-10, etc.)')], default='texto', max_length=50)),
                ('orden', models.IntegerField(default=0, help_text='Orden en que aparecerá la pregunta en la encuesta.')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='formacion.encuestasatisfaccion')),
            ],
            options={
                'verbose_name': 'Pregunta de Encuesta',
                'verbose_name_plural': 'Preguntas de Encuesta',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='RespuestaEncuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_respuesta', models.DateTimeField(auto_now_add=True)),
                ('completada', models.BooleanField(default=False, help_text='Indica si la encuesta ha sido completada por el usuario.')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas_recibidas', to='formacion.encuestasatisfaccion')),
                ('participacion', models.OneToOneField(help_text='Participación de curso a la que corresponde esta respuesta de encuesta.', on_delete=django.db.models.deletion.CASCADE, related_name='respuesta_satisfaccion', to='formacion.participacion')),
            ],
            options={
                'verbose_name': 'Respuesta de Encuesta',
                'verbose_name_plural': 'Respuestas de Encuestas',
                'unique_together': {('participacion',)},
            },
        ),
        migrations.CreateModel(
            name='DetalleRespuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta_texto', models.TextField(blank=True, null=True)),
                ('respuesta_escala', models.IntegerField(blank=True, null=True)),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formacion.preguntaencuesta')),
                ('respuesta_encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='formacion.respuestaencuesta')),
            ],
            options={
                'verbose_name': 'Detalle de Respuesta',
                'verbose_name_plural': 'Detalles de Respuestas',
                'unique_together': {('respuesta_encuesta', 'pregunta')},
            },
        ),
    ]
